name: Install Swift
description: Install Swift Release

inputs:
  branch:
    description: 'Swift Build Branch'
    required: true
  tag:
    description: 'Swift Build Tag'
    required: true

runs:
  using: 'composite'

  steps:
    - name: Install Swift ${{ inputs.tag }}
      if: ${{ runner.os == 'Windows' }}
      run: |
        function Update-EnvironmentVariables {
          foreach ($level in "Machine", "User") {
            [Environment]::GetEnvironmentVariables($level).GetEnumerator() | % {
              # For Path variables, append the new values, if they're not already in there
              if ($_.Name -Match 'Path$') {
                $_.Value = ($((Get-Content "Env:$($_.Name)") + ";$($_.Value)") -Split ';' | Select -Unique) -Join ';'
              }
              $_
            } | Set-Content -Path { "Env:$($_.Name)" }
          }
        }

        Install-Binary -Url "https://download.swift.org/${{ inputs.branch }}/windows10/swift-${{ inputs.tag }}/swift-${{ inputs.tag }}-windows10.exe" -Name "installer.exe" -ArgumentList ("-q")
        Update-EnvironmentVariables

        # Reset Path and environment
        echo "$env:Path" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
        Get-ChildItem Env: | % { echo "$($_.Name)=$($_.Value)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append }
      shell: pwsh

    - name: Install Swift ${{ inputs.tag }}
      if: ${{ runner.os == 'Linux' }}
      run: |
        case $(lsb_release -is) in
        Ubuntu)
          release=$(lsb_release -rs)
          case ${release} in
          16.04|18.04|20.04)
            curl -sOL https://download.swift.org/${{ inputs.branch }}/ubuntu${release/./}/swift-${{ inputs.tag }}/swift-${{ inputs.tag }}-ubuntu${release}.tar.gz
            tar zxf swift-${{ inputs.tag }}-ubuntu${release}.tar.gz -C ${HOME}
            rm -f swift-${{ inputs.tag }}-ubuntu${release}.tar.gz
          ;;
          *)
            echo ::error unsupported Ubuntu release
            exit 1
          esac
        ;;
        *)
          echo ::error unknown Linux distribution
          exit 1
        esac

        echo "${HOME}/usr/bin" >> $GITHUB_PATH
      shell: bash
